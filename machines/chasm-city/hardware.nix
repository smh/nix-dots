{ inputs, outputs, config, modulesPath, ... }: {
  imports = [ "${modulesPath}/profiles/qemu-guest.nix" ];

  proxmox = {
    qemuConf = {
      bios = "ovmf";
      agent = true;
      # memory = 2048;
      # net0 = "virtio=00:00:00:00:00:00,bridge=vmbr0,firewall=1";
    };
    # qemuExtraConf = { machine = "q35"; };
  };
  services.qemuGuest.enable = true;

  boot = {
    growPartition = true;
    # we want 'eth0', not 'enp6' or 'enp6s18'
    kernelParams = [ "net.ifnames=0" ];
    loader = {
      grub = {
        enable = true;
        devices = [ "nodev" ];
      };
      systemd-boot.enable = true;
    };
  };

  # boot.isContainer = true;
  # boot.loader.grub.enable = false;
  # hardware.enableAllFirmware = false;

  # Interface is this on M1
  # networking.interfaces.ens160.useDHCP = true;

  # Lots of stuff that uses aarch64 that claims doesn't work, but actually works.
  # nixpkgs.config.allowUnfree = true;
  # nixpkgs.config.allowUnsupportedSystem = true;

  networking = {
    # dhcpcd.enable = false;
    useDHCP = true;
    # useHostResolvConf = false;
    useNetworkd = true;
  };

  services.cloud-init = {
    enable = true;
    network.enable = config.networking.useNetworkd;
  };

  # systemd.network = {
  #   enable = true;
  #   networks."50-eth0" = {
  #     matchConfig.Name = "eth0";
  #     networkConfig = {
  #       DHCP = "ipv4";
  #       IPv6AcceptRA = true;
  #     };
  #     linkConfig.RequiredForOnline = "routable";
  #   };
  # };

  # Enable udev
  services.udev = {
    enable = true;
    extraRules = "";  # Add any custom rules here if needed
  };


  # from nixos-config/machines/hardware/vm-aarch64.nix - generated by nixos-generate-config ??
  # boot.initrd.availableKernelModules = [ "uhci_hcd" "ahci" "xhci_pci" "nvme" "usbhid" "sr_mod" ];
  # boot.initrd.kernelModules = [ ];
  # boot.kernelModules = [ ];
  # boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-label/nixos";
    fsType = "ext4";
    autoResize = true;
  };

  # fileSystems."/boot" = {
  #   device = "/dev/disk/by-label/boot";
  #   fsType = "vfat";
  # };

  swapDevices = [ ];

}
